# Multi-stage build para API Gateway
FROM maven:3.9-eclipse-temurin-21-alpine AS build

WORKDIR /build

# Copiar el pom.xml del padre
COPY pom.xml ./

# Copiar los poms de todos los módulos
COPY api-gateway/pom.xml ./api-gateway/
COPY auth-bff/pom.xml ./auth-bff/
COPY merchant-service/pom.xml ./merchant-service/
COPY payment-orchestrator/pom.xml ./payment-orchestrator/

# Descargar dependencias (se cachea esta capa)
RUN mvn dependency:go-offline -B -pl api-gateway -am || true

# Copiar el código fuente del api-gateway
COPY api-gateway/src ./api-gateway/src

# Construir solo el módulo api-gateway
RUN mvn clean package -pl api-gateway -am -DskipTests

# Etapa final con JRE mínimo
FROM eclipse-temurin:21-jre-alpine

WORKDIR /app

# Crear usuario no-root para mayor seguridad
RUN addgroup -S spring && adduser -S spring -G spring
USER spring:spring

# Copiar el JAR desde la etapa de build
COPY --from=build /build/api-gateway/target/*.jar app.jar

# Railway asigna automáticamente PORT
EXPOSE 8080

# Configuración JVM optimizada para Railway
ENV JAVA_OPTS="-Xmx512m -Xms256m -XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0"

ENTRYPOINT ["sh", "-c", "java $JAVA_OPTS -jar app.jar"]

