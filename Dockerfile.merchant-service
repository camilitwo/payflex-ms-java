# Multi-stage build para Merchant Service
FROM maven:3.9-eclipse-temurin-21-alpine AS build

WORKDIR /build

# Copiar POMs primero para cachear dependencias
COPY pom.xml ./
COPY api-gateway/pom.xml ./api-gateway/
COPY auth-bff/pom.xml ./auth-bff/
COPY merchant-service/pom.xml ./merchant-service/
COPY payment-orchestrator/pom.xml ./payment-orchestrator/

# Descargar dependencias del módulo
RUN mvn dependency:go-offline -B -pl merchant-service -am || true

# Copiar el resto del código del monorepo (asegura que exista merchant-service/src)
COPY . .

# Construir solo el módulo merchant-service
RUN mvn clean package -pl merchant-service -am -DskipTests

# Etapa final con JRE mínimo
FROM eclipse-temurin:21-jre-alpine
WORKDIR /app

# Crear usuario no-root
RUN addgroup -S spring && adduser -S spring -G spring

# Copiar el JAR desde la etapa de build
COPY --from=build --chown=spring:spring /build/merchant-service/target/merchant-service-*.jar app.jar

USER spring:spring
EXPOSE 8080

# Ajustar puerto de Spring al PORT de Railway
ENV JAVA_OPTS="-Xmx512m -Xms256m -XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0"
ENTRYPOINT ["sh", "-c", "java -Dserver.port=${PORT:-8080} $JAVA_OPTS -jar app.jar"]
